<html>

<head>
  <title>Choose Your Own Disaster</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places,visualization"></script>
  <link href='http://fonts.googleapis.com/css?family=Gloria+Hallelujah' rel='stylesheet' type='text/css'>
</head>

<body>




  <script type="text/javascript">



    $("#getLocation").click(function() {

      var latitude, longitude;
      navigator.geolocation.watchPosition(function(position) {
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;


      });

    });

    var map;
    var infowindow;
    var service;
    (41.890550, -87.626847);
    // radius: 200,

    var active = active || {};
    active.markers = [];

    function initialize() {
  map = new google.maps.Map(document.getElementById('map-canvas'), {
    center: new google.maps.LatLng(41.890550, -87.626847),
    zoom: 16,
    styles: [
      {
        stylers: [
          { visibility: 'simplified' }
        ]
      },
      {
        elementType: 'labels',
        stylers: [
          { visibility: 'off' }
        ]
      }
    ]
  });

  infoWindow = new google.maps.InfoWindow();
  service = new google.maps.places.PlacesService(map);

  google.maps.event.addListenerOnce(map, 'bounds_changed', performSearch);
}

function performSearch() {
  var request = {
    bounds: map.getBounds(),
    types: ['bar', 'pub', 'tavern','bars', 'lounge']
  };
  service.radarSearch(request, callback);
}
    function callback(results, status) {
    if (status != google.maps.places.PlacesServiceStatus.OK) {
    alert(status);
    return;
    }
    for (var i = 0, result; result = results[i]; i++) {
    createMarker(result);
    }
    }

    function createMarker(place) {
  var marker = new google.maps.Marker({
    map: map,
    position: place.geometry.location,
    icon: {
      // Star
      path: 'M 0,-24 6,-7 24,-7 10,4 15,21 0,11 -15,21 -10,4 -24,-7 -6,-7 z',
      fillColor: '#ffff00',
      fillOpacity: 1,
      scale: 1/4,
      strokeColor: '#bd8d2c',
      strokeWeight: 1
    }
  });

  google.maps.event.addListener(marker, 'click', function() {
    service.getDetails(place, function(result, status) {
      if (status != google.maps.places.PlacesServiceStatus.OK) {
        alert(status);
        return;
      }
      $("#bar_list").html('');
      infoWindow.setContent(result.name);
      infoWindow.open(map, marker);
      $('#bar_list').append("<h5 class='bar_li'>" + result.name + "</h5><h6 class='bar_li'>" + result.vicinity + "<br>Rating: " + result.rating + "<br>" +
      "<a href='" + result.url +"'>Website</a></h6>");
      console.log("hi");
    });
  });

  google.maps.event.addListener(marker, 'dblclick', function() {
    $('#crawl_list').append("<li class='bar_li'>" + result.name + "<br>" + result.vicinity + "</li>");
    scopeHelper(marker);
  });


}

google.maps.event.addDomListener(window, 'load', initialize);

    // function createMarker(place) {
    //   var placeLoc = place.geometry.location;
    //   var marker = new google.maps.Marker({
    //     map: map,
    //     position: place.geometry.location
    //   });
    //   active.markers.push(marker);
    //
    //   var markerLocation = active.length - 1;
    //
    //   google.maps.event.addListener(marker, 'click', function() {

        // infowindow.setContent(place.name, place.address_components.street_address);
        // infowindow.open(map, this);
        //want to add place info but refresh when another bar is clicked


      // });
    //

    //
    // google.maps.event.addDomListener(window, 'load', initialize);

    function scopeHelper(scopeObj) {
      console.log(scopeObj);
    }


    $("#location_searchBtn").click(function() {

      var location = $('#location_search').val();

      $.ajax({
        url: '/geolocation_getter',
        dataType: "json",
        method: 'post',
        data: { location: location },
        success:function(data){
          app.getBarsAndRender(data.latitude, data.longitude);
        },
        error: function(err) {
          console.log(err);
        }
      });
    });



  </script>

  <header>
    <h1 id="head_text">Choose Your Own Disaster...
      <% if (@drinker != nil) %>
        <%= @drinker.name %>
      <% else %>
        <%= "guest" %>
      <% end %>

  </h1>


  </header>
  <div id="location">
    <button type="button" id="getLocation">We're finna start here</button>
    <h3 id="or">or</h3>
    <input type="text" id="location_search" placeholder="Address + Zip">
    <button id="location_searchBtn">Finna Start Somewhere Else</button>
  </div>

  <h2 id='position'></h2>

  <div id="map-canvas">
  </div>

  <div id="list"></div>

  <div id="about_bar">
    <h3>About Bar</h3>
    <div id="bar_list">
    </div>
  </div>

  <div id="current_crawl">
    <h3>Current Crawl</h3>
    <ol id="crawl_list">
  </ol>
  </div>





    <div id="drunk_chat">
      <h5 class="chat_text">Wanna DrunkChat? No Ragrets! Yolo, Yo.</h5>

      <p class="chat_text">First time, Drinker? Sign up!</p>
      <!-- form for sign-up: to make a new drinker -->
      <form action="/drinkers" method='post'>
        <%= token_tag %>
        <input type="text" name='drinker[name]' placeholder='...drinkername'>
        <input type="password" name='drinker[password]' placeholder='...password'>
        <input type="submit" value='Sign-Up'>
      </form>

      <p class="chat_text">Veteran Drinker? Sign in!</p>
      <!-- form for sign-in: to make a new session -->
      <form action="/sessions" method='post'>
        <%= token_tag %>
        <input type="text" name='drinkername' placeholder='...drinkername'>
        <input type="password" name='password' placeholder='...password'>
        <input type="submit" value='Sign-In'>
      </form>
    </div>


    <div id="drunk_chat">
    <h5 class="chat_text">Chats</h5>
    <ul>
      <li class="chats">
        <%= form_for @chat do |f| %>
          <%= f.label :message %>
          <%= f.text_field :message %>
          <%= f.submit %>
        <% end %>
      </li>
      <% @chats.reverse.each do |chat| %>
        <li>

          <p class="chat_text">
            <%= chat.drinker.name %> :   <%= chat.message %>
          <p class="chat_text">
        </li>
      <% end %>
    </ul>
  </div>

  </body>
</html>
